import subprocess #for running scripts
import time #for timer
import ftplib #for FTP connection

time_now=time.time()
send_to_internet=false

subprocess.call("sudo ln -sf /dev/tty0 /dev/modem", shell=True)
subprocess.call("sudo pon rnet", shell=True) #turns on internet connection

while time.time()-time_now<3:
	dummy=1

time_now=time.time()

subprocess.call("sudo ln -sf /dev/tty0 /dev/modem", shell=True)
subprocess.call("sudo route add default gw 192.168.254.254",shell=True) #Command to set cell phone internet to default

while time.time()-time_now<3:
	dummy=1

subprocess.call("sudo /etc/init.d/ntp stop", shell=True)
subprocess.call("sudo ntpd", shell=True)
subprocess.call("sudo /etc/init.d/ntp start", shell=True) #to syncronize time between the Raspberry Pis

session = ftplib.FTP('198.196.0.10','Electroplankton','ece499') #Use online FTP server information

subprocess.call("sudo poff rnet", shell=True) #turns off internet connection

subprocess.call("python Handshake_Surface.py",shell=True)
IMU=subprocess.popen(['python', 'Desktop/IMU.py', '&'],bufsize=-1) #starts IMU collection in background

t2=time.time()

while True:
	if(send_to_internet=true):
		t2=time.time()
		send_to_internet=false

	t1=time.time() #records time in seconds
	
	while((t1-time.time())<=10) #copy data every 10 seconds
		dummy=1
	
	#every ten seconds: stop, copy, restart, and send copy
	IMU.kill()
	subprocess.call("sudo cp /home/pi/surface_data.csv /home/pi/surface_data_copy.csv",shell=True)
	subprocess.call("python Handshake_Surface.py",shell=True)
	IMU
	t1=time.time();
	
	if((time.time())-t2>60)
		time_now=time.time()
		#subprocess.call("sudo ln -sf /dev/tty0 /dev/modem", shell=True)
		subprocess.call("sudo pon rnet", shell=True) #turns on internet connection
		while time.time()-time_now<3:
			dummy=1
		time_now=time.time()
		subprocess.call("sudo route add default gw 192.168.254.254",shell=True) #Command to set cell phone internet to default
		while time.time()-time_now<3:
			dummy=1
		file = open('data_file_subsurface_copy','rb')                  # file to send
		session.storbinary('STOR data_file_subsurface_copy.csv', file)     # send the file
		file.close()               				  # close file and FTP
		file = open('data_file_surface_copy','rb')                  # file to send
		session.storbinary('STOR data_file_surface_copy.csv', file)     # send the file
		file.close()                                    	  # close file and FTP 
		send_to_internet=true
		subprocess.call("sudo poff rnet", shell=True) #turns off internet connection
		
		
	
	

	
	
		
